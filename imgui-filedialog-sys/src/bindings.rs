/* automatically generated by rust-bindgen 0.57.0 */

pub type size_t = ::std::os::raw::c_ulong;
pub type ImGuiWindowFlags = ::std::os::raw::c_int;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ImVec2 {
    pub x: f32,
    pub y: f32,
}
#[test]
fn bindgen_test_layout_ImVec2() {
    assert_eq!(
        ::std::mem::size_of::<ImVec2>(),
        8usize,
        concat!("Size of: ", stringify!(ImVec2))
    );
    assert_eq!(
        ::std::mem::align_of::<ImVec2>(),
        4usize,
        concat!("Alignment of ", stringify!(ImVec2))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ImVec2>())).x as *const _ as usize },
        0usize,
        concat!("Offset of field: ", stringify!(ImVec2), "::", stringify!(x))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ImVec2>())).y as *const _ as usize },
        4usize,
        concat!("Offset of field: ", stringify!(ImVec2), "::", stringify!(y))
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ImVec4 {
    pub x: f32,
    pub y: f32,
    pub z: f32,
    pub w: f32,
}
#[test]
fn bindgen_test_layout_ImVec4() {
    assert_eq!(
        ::std::mem::size_of::<ImVec4>(),
        16usize,
        concat!("Size of: ", stringify!(ImVec4))
    );
    assert_eq!(
        ::std::mem::align_of::<ImVec4>(),
        4usize,
        concat!("Alignment of ", stringify!(ImVec4))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ImVec4>())).x as *const _ as usize },
        0usize,
        concat!("Offset of field: ", stringify!(ImVec4), "::", stringify!(x))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ImVec4>())).y as *const _ as usize },
        4usize,
        concat!("Offset of field: ", stringify!(ImVec4), "::", stringify!(y))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ImVec4>())).z as *const _ as usize },
        8usize,
        concat!("Offset of field: ", stringify!(ImVec4), "::", stringify!(z))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ImVec4>())).w as *const _ as usize },
        12usize,
        concat!("Offset of field: ", stringify!(ImVec4), "::", stringify!(w))
    );
}
pub type ImGuiFileDialogFlags = ::std::os::raw::c_int;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ImGuiFileDialog {
    _unused: [u8; 0],
}
#[doc = ""]
#[doc = " C API ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////"]
#[doc = ""]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct IGFD_Selection_Pair {
    pub fileName: *mut ::std::os::raw::c_char,
    pub filePathName: *mut ::std::os::raw::c_char,
}
#[test]
fn bindgen_test_layout_IGFD_Selection_Pair() {
    assert_eq!(
        ::std::mem::size_of::<IGFD_Selection_Pair>(),
        16usize,
        concat!("Size of: ", stringify!(IGFD_Selection_Pair))
    );
    assert_eq!(
        ::std::mem::align_of::<IGFD_Selection_Pair>(),
        8usize,
        concat!("Alignment of ", stringify!(IGFD_Selection_Pair))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<IGFD_Selection_Pair>())).fileName as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(IGFD_Selection_Pair),
            "::",
            stringify!(fileName)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<IGFD_Selection_Pair>())).filePathName as *const _ as usize
        },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(IGFD_Selection_Pair),
            "::",
            stringify!(filePathName)
        )
    );
}
extern "C" {
    pub fn IGFD_Selection_Pair_Get() -> IGFD_Selection_Pair;
}
extern "C" {
    pub fn IGFD_Selection_Pair_DestroyContent(vSelection_Pair: *mut IGFD_Selection_Pair);
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct IGFD_Selection {
    pub table: *mut IGFD_Selection_Pair,
    pub count: size_t,
}
#[test]
fn bindgen_test_layout_IGFD_Selection() {
    assert_eq!(
        ::std::mem::size_of::<IGFD_Selection>(),
        16usize,
        concat!("Size of: ", stringify!(IGFD_Selection))
    );
    assert_eq!(
        ::std::mem::align_of::<IGFD_Selection>(),
        8usize,
        concat!("Alignment of ", stringify!(IGFD_Selection))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<IGFD_Selection>())).table as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(IGFD_Selection),
            "::",
            stringify!(table)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<IGFD_Selection>())).count as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(IGFD_Selection),
            "::",
            stringify!(count)
        )
    );
}
extern "C" {
    pub fn IGFD_Selection_Get() -> IGFD_Selection;
}
extern "C" {
    pub fn IGFD_Selection_DestroyContent(vSelection: *mut IGFD_Selection);
}
extern "C" {
    pub fn IGFD_Create() -> *mut ImGuiFileDialog;
}
extern "C" {
    pub fn IGFD_Destroy(vContext: *mut ImGuiFileDialog);
}
pub type IGFD_PaneFun = ::std::option::Option<
    unsafe extern "C" fn(
        arg1: *const ::std::os::raw::c_char,
        arg2: *mut ::std::os::raw::c_void,
        arg3: *mut bool,
    ),
>;
extern "C" {
    pub fn IGFD_OpenDialog(
        vContext: *mut ImGuiFileDialog,
        vKey: *const ::std::os::raw::c_char,
        vTitle: *const ::std::os::raw::c_char,
        vFilters: *const ::std::os::raw::c_char,
        vPath: *const ::std::os::raw::c_char,
        vFileName: *const ::std::os::raw::c_char,
        vCountSelectionMax: ::std::os::raw::c_int,
        vUserDatas: *mut ::std::os::raw::c_void,
        vFlags: ImGuiFileDialogFlags,
    );
}
extern "C" {
    pub fn IGFD_OpenDialog2(
        vContext: *mut ImGuiFileDialog,
        vKey: *const ::std::os::raw::c_char,
        vTitle: *const ::std::os::raw::c_char,
        vFilters: *const ::std::os::raw::c_char,
        vFilePathName: *const ::std::os::raw::c_char,
        vCountSelectionMax: ::std::os::raw::c_int,
        vUserDatas: *mut ::std::os::raw::c_void,
        vFlags: ImGuiFileDialogFlags,
    );
}
extern "C" {
    pub fn IGFD_OpenPaneDialog(
        vContext: *mut ImGuiFileDialog,
        vKey: *const ::std::os::raw::c_char,
        vTitle: *const ::std::os::raw::c_char,
        vFilters: *const ::std::os::raw::c_char,
        vPath: *const ::std::os::raw::c_char,
        vFileName: *const ::std::os::raw::c_char,
        vSidePane: IGFD_PaneFun,
        vSidePaneWidth: f32,
        vCountSelectionMax: ::std::os::raw::c_int,
        vUserDatas: *mut ::std::os::raw::c_void,
        vFlags: ImGuiFileDialogFlags,
    );
}
extern "C" {
    pub fn IGFD_OpenPaneDialog2(
        vContext: *mut ImGuiFileDialog,
        vKey: *const ::std::os::raw::c_char,
        vTitle: *const ::std::os::raw::c_char,
        vFilters: *const ::std::os::raw::c_char,
        vFilePathName: *const ::std::os::raw::c_char,
        vSidePane: IGFD_PaneFun,
        vSidePaneWidth: f32,
        vCountSelectionMax: ::std::os::raw::c_int,
        vUserDatas: *mut ::std::os::raw::c_void,
        vFlags: ImGuiFileDialogFlags,
    );
}
extern "C" {
    pub fn IGFD_OpenModal(
        vContext: *mut ImGuiFileDialog,
        vKey: *const ::std::os::raw::c_char,
        vTitle: *const ::std::os::raw::c_char,
        vFilters: *const ::std::os::raw::c_char,
        vPath: *const ::std::os::raw::c_char,
        vFileName: *const ::std::os::raw::c_char,
        vCountSelectionMax: ::std::os::raw::c_int,
        vUserDatas: *mut ::std::os::raw::c_void,
        vFlags: ImGuiFileDialogFlags,
    );
}
extern "C" {
    pub fn IGFD_OpenModal2(
        vContext: *mut ImGuiFileDialog,
        vKey: *const ::std::os::raw::c_char,
        vTitle: *const ::std::os::raw::c_char,
        vFilters: *const ::std::os::raw::c_char,
        vFilePathName: *const ::std::os::raw::c_char,
        vCountSelectionMax: ::std::os::raw::c_int,
        vUserDatas: *mut ::std::os::raw::c_void,
        vFlags: ImGuiFileDialogFlags,
    );
}
extern "C" {
    pub fn IGFD_OpenPaneModal(
        vContext: *mut ImGuiFileDialog,
        vKey: *const ::std::os::raw::c_char,
        vTitle: *const ::std::os::raw::c_char,
        vFilters: *const ::std::os::raw::c_char,
        vPath: *const ::std::os::raw::c_char,
        vFileName: *const ::std::os::raw::c_char,
        vSidePane: IGFD_PaneFun,
        vSidePaneWidth: f32,
        vCountSelectionMax: ::std::os::raw::c_int,
        vUserDatas: *mut ::std::os::raw::c_void,
        vFlags: ImGuiFileDialogFlags,
    );
}
extern "C" {
    pub fn IGFD_OpenPaneModal2(
        vContext: *mut ImGuiFileDialog,
        vKey: *const ::std::os::raw::c_char,
        vTitle: *const ::std::os::raw::c_char,
        vFilters: *const ::std::os::raw::c_char,
        vFilePathName: *const ::std::os::raw::c_char,
        vSidePane: IGFD_PaneFun,
        vSidePaneWidth: f32,
        vCountSelectionMax: ::std::os::raw::c_int,
        vUserDatas: *mut ::std::os::raw::c_void,
        vFlags: ImGuiFileDialogFlags,
    );
}
extern "C" {
    pub fn IGFD_DisplayDialog(
        vContext: *mut ImGuiFileDialog,
        vKey: *const ::std::os::raw::c_char,
        vFlags: ImGuiWindowFlags,
        vMinSize: ImVec2,
        vMaxSize: ImVec2,
    ) -> bool;
}
extern "C" {
    pub fn IGFD_CloseDialog(vContext: *mut ImGuiFileDialog);
}
extern "C" {
    pub fn IGFD_IsOk(vContext: *mut ImGuiFileDialog) -> bool;
}
extern "C" {
    pub fn IGFD_WasKeyOpenedThisFrame(
        vContext: *mut ImGuiFileDialog,
        vKey: *const ::std::os::raw::c_char,
    ) -> bool;
}
extern "C" {
    pub fn IGFD_WasOpenedThisFrame(vContext: *mut ImGuiFileDialog) -> bool;
}
extern "C" {
    pub fn IGFD_IsKeyOpened(
        vContext: *mut ImGuiFileDialog,
        vCurrentOpenedKey: *const ::std::os::raw::c_char,
    ) -> bool;
}
extern "C" {
    pub fn IGFD_IsOpened(vContext: *mut ImGuiFileDialog) -> bool;
}
extern "C" {
    pub fn IGFD_GetSelection(vContext: *mut ImGuiFileDialog) -> IGFD_Selection;
}
extern "C" {
    pub fn IGFD_GetFilePathName(vContext: *mut ImGuiFileDialog) -> *mut ::std::os::raw::c_char;
}
extern "C" {
    pub fn IGFD_GetCurrentFileName(vContext: *mut ImGuiFileDialog) -> *mut ::std::os::raw::c_char;
}
extern "C" {
    pub fn IGFD_GetCurrentPath(vContext: *mut ImGuiFileDialog) -> *mut ::std::os::raw::c_char;
}
extern "C" {
    pub fn IGFD_GetCurrentFilter(vContext: *mut ImGuiFileDialog) -> *mut ::std::os::raw::c_char;
}
extern "C" {
    pub fn IGFD_GetUserDatas(vContext: *mut ImGuiFileDialog) -> *mut ::std::os::raw::c_void;
}
extern "C" {
    pub fn IGFD_SetExtentionInfos(
        vContext: *mut ImGuiFileDialog,
        vFilter: *const ::std::os::raw::c_char,
        vColor: ImVec4,
        vIconText: *const ::std::os::raw::c_char,
    );
}
extern "C" {
    pub fn IGFD_SetExtentionInfos2(
        vContext: *mut ImGuiFileDialog,
        vFilter: *const ::std::os::raw::c_char,
        vR: f32,
        vG: f32,
        vB: f32,
        vA: f32,
        vIconText: *const ::std::os::raw::c_char,
    );
}
extern "C" {
    pub fn IGFD_GetExtentionInfos(
        vContext: *mut ImGuiFileDialog,
        vFilter: *const ::std::os::raw::c_char,
        vOutColor: *mut ImVec4,
        vOutIconText: *mut *mut ::std::os::raw::c_char,
    ) -> bool;
}
extern "C" {
    pub fn IGFD_ClearExtentionInfos(vContext: *mut ImGuiFileDialog);
}
